package com.woutervdb.turbomodernity.grammars.antlr;

import com.woutervdb.turbomodernity.model.Grammar;
import com.woutervdb.turbomodernity.model.Rule;
import org.antlr.v4.runtime.tree.ParseTree;
import org.antlr.v4.runtime.tree.ParseTreeWalker;

/**
 * Parse tree listener which creates a model of an ANTLR grammar based on its parsed grammar specification.
 */
public class ModelCreatingListener extends ANTLRv4ParserBaseListener {
    private Grammar grammar;
    private Rule rule;

    /**
     * Construct a model of a grammar based on its parsed grammar specification.
     *
     * @param tree Parse tree generated by the ANTLR grammar.
     * @return A model of the grammar.
     */
    public static Grammar createGrammar(ParseTree tree) {
        ModelCreatingListener listener = new ModelCreatingListener();
        ParseTreeWalker walker = new ParseTreeWalker();
        walker.walk(listener, tree);
        return listener.grammar;
    }

    @Override
    public void enterGrammarSpec(ANTLRv4Parser.GrammarSpecContext ctx) {
        this.grammar = null;
    }

    @Override
    public void exitGrammarDecl(ANTLRv4Parser.GrammarDeclContext ctx) {
        Grammar.GRAMMAR_TYPE type = ctx.grammarType().LEXER() != null ? Grammar.GRAMMAR_TYPE.LEXER : Grammar.GRAMMAR_TYPE.PARSER;
        this.grammar = new Grammar(type, ctx.identifier().getText());
    }

    @Override
    public void exitOption(ANTLRv4Parser.OptionContext ctx) {
        this.grammar.setOption(ctx.identifier().getText(), ctx.optionValue().getText());
    }

    @Override
    public void enterParserRuleSpec(ANTLRv4Parser.ParserRuleSpecContext ctx) {
        this.rule = this.grammar.addRule(ctx.RULE_REF().getText());
    }

    @Override
    public void exitLabeledAlt(ANTLRv4Parser.LabeledAltContext ctx) {
        if (ctx.identifier() != null) {
            this.rule.addAlternative(ctx.identifier().getText(), ctx.alternative().getText());
            return;
        }
        this.rule.addAlternative(ctx.alternative().getText());
    }

    @Override
    public void exitParserRuleSpec(ANTLRv4Parser.ParserRuleSpecContext ctx) {
        this.rule = null;
    }
}
